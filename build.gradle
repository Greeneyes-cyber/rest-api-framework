buildscript {
    ext.kotlin_version = '1.3.21'
    ext {
        springBootVersion = '1.5.15.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'

/**
 * 外部依存ライブラリのリポジトリ
 */
repositories {
    mavenCentral()
}

/**
 * ソースフォルダー指定
 */
sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.kotlin.srcDirs += 'src/main/kotlin'
}

dependencies {
    /**
     * Logback
     */
    compile 'ch.qos.logback:logback-classic:1.2.3'

    /**
     * jackson
     */
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'

    /**
     * Java X WS RS
     */
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.27'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.27'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'


    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

/**
 * コンパイラーオプション
 */
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        verbose = true
    }
}

/**
 * Gradle wrapper定義タスク
 */
task wrapper(type: Wrapper) {
    gradleVersion = '4.10'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

/**
 * 実行可能jar設定
 */
jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }
}